---
- name: Get all content-packs
  uri:
    url: https://localhost/api/system/content_packs
    validate_certs: false
    user: admin
    password: "{{ root_password }}"
    force_basic_auth: true
    method: GET
    timeout: "{{ response_timeout }}"
    status_code: 200
    headers:
      Accept: application/json
    return_content: true
  register: content_packs_list

- name: Get 'Qubership dashboard` content-pack id
  set_fact:
    qubership_content_pack_id: "{{ content_packs_list | json_query(jq_content_pack) }}"
  vars:
    jq_content_pack: "json.content_packs[?name==`Qubership dashboard`].id | [0]"

- debug:
    var: qubership_content_pack_id

- name: Get all dashboards
  uri:
    url: https://localhost/api/dashboards
    validate_certs: false
    user: admin
    password: "{{ root_password }}"
    force_basic_auth: true
    method: GET
    timeout: "{{ response_timeout }}"
    status_code: 200
    headers:
      Accept: application/json
    return_content: true
  register: dashboards_list

- name: Get dashboard ids
  set_fact:
    dashboard_from_server_id: "{{ dashboards_list | json_query(jq_dashboard) }}"
    k8s_events_dashboard_from_server_id: "{{ dashboards_list | json_query(jq_k8s_events_dashboard) }}"
  vars:
    jq_dashboard: "json.views[?title==`Sources by Service`].id | [0]"
    jq_k8s_events_dashboard: "json.views[?title==`Kubernetes Events`].id | [0]"

- debug:
    msg: "Qubership dashboard installed in the Graylog from content pack with id = {{ qubership_content_pack_id }}"
  when:
    - qubership_content_pack_id is defined
    - qubership_content_pack_id | length > 0

- name: Remove default dashboards
  block:
    - name: Get installations id
      uri:
        url: https://localhost/api/system/content_packs/{{ qubership_content_pack_id }}/installations
        validate_certs: false
        user: admin
        password: "{{ root_password }}"
        force_basic_auth: true
        method: GET
        timeout: "{{ response_timeout }}"
        status_code: 200
        headers:
          Accept: application/json
        return_content: true
      register: installations_info

    - debug:
        msg: "{{ installations_info }}"

    - name: Get installation id of dashboards
      set_fact:
        installation_id: "{{ installations_info | json_query(jq_dashboard) }}"
      vars:
        jq_dashboard: "json.installations[?content_pack_id==`{{ qubership_content_pack_id }}`]._id | [0]"

    - name: Uninstall dashboards
      uri:
        url: https://localhost/api/system/content_packs/{{ qubership_content_pack_id }}/installations/{{ item }}
        validate_certs: false
        user: admin
        password: "{{ root_password }}"
        force_basic_auth: true
        method: DELETE
        timeout: "{{ response_timeout }}"
        status_code: 200
        headers:
          X-Requested-By: Graylog API Browser
      loop: "{{ installation_ids }}"
      loop_control:
        label: "{{ item }}"
      register: uninstall_results
      no_log: true

    - name: Print Uninstall dashboards results 
      debug:
        msg: "Uninstalled installation_id={{ item.item }} â†’ status={{ item.status }}"
      loop: "{{ uninstall_results.results }}"

    - name: Delete content-pack
      uri:
        url: https://localhost/api/system/content_packs/{{ qubership_content_pack_id }}
        validate_certs: false
        user: admin
        password: "{{ root_password }}"
        force_basic_auth: true
        method: DELETE
        timeout: "{{ response_timeout }}"
        status_code: [204, 400]
        headers:
          X-Requested-By: Graylog API Browser
      register: result
      until: result.status == 204
      retries: 10
      delay: 5
  when:
    - qubership_content_pack_id is defined
    - qubership_content_pack_id | length > 0
    - dashboard_from_server_id is defined
    - k8s_events_dashboard_from_server_id is defined
    - update_content | bool

- name: Upload content-packs
  uri:
    url: https://localhost/api/system/content_packs
    validate_certs: false
    user: admin
    password: "{{ root_password }}"
    force_basic_auth: true
    method: POST
    timeout: "{{ response_timeout }}"
    status_code: [201, 400]
    headers:
      X-Requested-By: Graylog API Browser
    body: "{{ lookup('file','{{ item }}') }}"
    body_format: json
  with_fileglob:
    - "{{ role_path }}/files/content_packs/*.json"

- name: Get all dashboards
  uri:
    url: https://localhost/api/dashboards
    validate_certs: false
    user: admin
    password: "{{ root_password }}"
    force_basic_auth: true
    method: GET
    timeout: "{{ response_timeout }}"
    status_code: 200
    headers:
      Accept: application/json
    return_content: true
  register: dashboards_list

- name: Get Qubership dashboard id
  set_fact:
    dashboard_from_server_id: "{{ dashboards_list | json_query(jq_dashboard) }}"
  vars:
    jq_dashboard: "json.views[?title==`Sources by Service`].id | [0]"

- name: Install default dashboards
  uri:
    url: https://localhost/api/system/content_packs/{{ graylog_dashboard_id }}/1/installations
    validate_certs: false
    user: admin
    password: "{{ root_password }}"
    force_basic_auth: true
    method: POST
    timeout: "{{ response_timeout }}"
    status_code: 200
    headers:
      X-Requested-By: Graylog API Browser
    body:
      comment: "Graylog Dashboard"
      parameters: {}
    body_format: json
  when:
    - (dashboard_from_server_id is undefined) or (dashboard_from_server_id is none) or (dashboard_from_server_id | trim | length == 0)